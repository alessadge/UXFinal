{"version":3,"sources":["Img/full.jpg","Componentes/Nav.js","Componentes/Inicio.js","Componentes/Noticias.js","Componentes/Quienessomos.js","Componentes/Login.js","Componentes/Eventos.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","class","to","href","role","target","Inicio","Noticias","Quienessomos","Login","Eventos","Home","src","imagen","alt","App","className","path","exact","component","Events","qsomos","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4FAAAA,EAAOC,QAAU,IAA0B,kC,yJCwC5BC,MArCf,WACE,OACE,yBAAKC,MAAM,0DACT,wBAAIA,MAAM,cACR,kBAAC,IAAD,CAAMC,GAAG,KACP,wBAAID,MAAM,mBACR,uBAAGA,MAAM,WAAWE,KAAK,IAAzB,cAGJ,kBAAC,IAAD,CAAMD,GAAG,WACP,wBAAID,MAAM,YAAW,uBAAGE,KAAK,GAAGF,MAAM,eAAeG,KAAK,UAArC,YAEvB,kBAAC,IAAD,CAAMF,GAAG,aACP,wBAAID,MAAM,YAAW,uBAAGE,KAAK,GAAGF,MAAM,eAAeG,KAAK,UAArC,cAEvB,kBAAC,IAAD,CAAMF,GAAG,YACP,wBAAID,MAAM,YAAW,uBAAGE,KAAK,GAAGF,MAAM,eAAeG,KAAK,UAArC,aAEvB,kBAAC,IAAD,CAAMF,GAAG,iBACP,wBAAID,MAAM,YAAW,uBAAGE,KAAK,GAAGF,MAAM,eAAeG,KAAK,UAArC,wBAEvB,wBAAIH,MAAM,YACR,uBAAGE,KAAK,gDAAgDE,OAAO,SAASJ,MAAM,eAAeG,KAAK,UAAlG,aAEF,wBAAIH,MAAM,YACR,uBAAGE,KAAK,iDAAiDE,OAAO,SAASJ,MAAM,eAAeG,KAAK,UAAnG,cAGF,kBAAC,IAAD,CAAMF,GAAG,UACP,wBAAID,MAAM,YAAW,uBAAGE,KAAK,GAAGF,MAAM,eAAeG,KAAK,UAArC,cCvBZE,MANnB,WACE,OACI,8CCsBSC,MAxBf,WACI,OACI,6BACI,mDACA,yBAAKN,MAAM,aACP,iDACA,8FACA,uBAAGA,MAAM,cAAT,uBACA,uBAAGA,MAAM,gBAAT,2BACA,uBAAGA,MAAM,gBAAT,gCACA,uBAAGA,MAAM,aAAT,0CACA,uBAAGA,MAAM,gBAAT,mCACA,uBAAGA,MAAM,eAAT,gCACA,uBAAGA,MAAM,kBAAT,mBACA,uBAAGA,MAAM,aAAT,2BACA,uBAAGA,MAAM,aAAT,qCACA,uBAAGA,MAAM,cAAT,kDACA,uBAAGA,MAAM,cAAT,gDCRDO,MATf,WACE,OACE,6BACE,sCACA,wCCESC,MANf,WACI,OACG,kDCIQC,MANf,WACI,OACG,uD,wBC4BP,IAAMC,EAAO,kBACX,6BACE,yBAAKC,IAAKC,IAAQZ,MAAM,UAAUa,IAAI,mBAI3BC,EA1Bf,WACE,OAEE,kBAAC,IAAD,KACE,yBAAKC,UAAU,OAEb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWR,IACjC,kBAAC,IAAD,CAAOM,KAAK,UAAUE,UAAWb,IACjC,kBAAC,IAAD,CAAOW,KAAK,YAAYE,UAAWZ,IACnC,kBAAC,IAAD,CAAOU,KAAK,WAAWE,UAAWC,IAClC,kBAAC,IAAD,CAAOH,KAAK,gBAAgBE,UAAWE,IACvC,kBAAC,IAAD,CAAOJ,KAAK,SAASE,UAAWV,Q,MCdtBa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,gB","file":"static/js/main.2fa50a8b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/full.20092c51.jpg\";","import React from 'react';\r\nimport '../App.css';\r\nimport { Link } from 'react-router-dom';\r\nfunction Nav() {\r\n  return (\r\n    <nav class=\"navbar navbar-expand-sm bg-dark navbar-dark sticky-top\">\r\n      <ul class=\"navbar-nav\">\r\n        <Link to='/'>\r\n          <li class=\"nav-item active\">\r\n            <a class=\"nav-link\" href=\"\">PitWorld</a>\r\n          </li>\r\n        </Link>\r\n        <Link to='/Inicio'>\r\n          <li class=\"nav-item\"><a href=\"\" class=\"btn btn-dark\" role=\"button\">Inicio</a></li>\r\n        </Link>\r\n        <Link to='/Noticias'>\r\n          <li class=\"nav-item\"><a href=\"\" class=\"btn btn-dark\" role=\"button\">Noticias</a></li>\r\n        </Link>\r\n        <Link to='/Eventos'>\r\n          <li class=\"nav-item\"><a href=\"\" class=\"btn btn-dark\" role=\"button\">Eventos</a></li>\r\n        </Link>\r\n        <Link to='/QuienesSomos'>\r\n          <li class=\"nav-item\"><a href=\"\" class=\"btn btn-dark\" role=\"button\">Â¿Quienes somos?</a></li>\r\n        </Link>\r\n        <li class=\"nav-item\">\r\n          <a href=\"https://www.facebook.com/PitworldAssociation/\" target=\"_blank\" class=\"btn btn-dark\" role=\"button\">Facebook</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a href=\"https://www.instagram.com/pitworldassociation/\" target=\"_blank\" class=\"btn btn-dark\" role=\"button\">Instagram</a>\r\n        </li>\r\n\r\n        <Link to='/Login'>\r\n          <li class=\"nav-item\"><a href=\"\" class=\"btn btn-dark\" role=\"button\">Login</a></li>\r\n        </Link>\r\n\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport '../App.css';\r\n\r\nfunction Inicio() {\r\n  return (\r\n      <h1>HEllo whwrorl</h1>\r\n      );\r\n    }\r\n    \r\n    export default Inicio;\r\n","import React from 'react';\r\nimport '../App.css';\r\n\r\nfunction Noticias() {\r\n    return (\r\n        <div>\r\n            <h3>Seccion de noticias</h3>\r\n            <div class=\"container\">\r\n                <h2>Contextual Colors</h2>\r\n                <p>Use the contextual classes to provide \"meaning through colors\":</p>\r\n                <p class=\"text-muted\">This text is muted.</p>\r\n                <p class=\"text-primary\">This text is important.</p>\r\n                <p class=\"text-success\">This text indicates success.</p>\r\n                <p class=\"text-info\">This text represents some information.</p>\r\n                <p class=\"text-warning\">This text represents a warning.</p>\r\n                <p class=\"text-danger\">This text represents danger.</p>\r\n                <p class=\"text-secondary\">Secondary text.</p>\r\n                <p class=\"text-dark\">This text is dark grey.</p>\r\n                <p class=\"text-body\">Default body color (often black).</p>\r\n                <p class=\"text-light\">This text is light grey (on white background).</p>\r\n                <p class=\"text-white\">This text is white (on white background).</p>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Noticias;\r\n","import React from 'react';\r\nimport '../App.css';\r\n\r\nfunction Quienessomos() {\r\n  return (\r\n    <div>\r\n      <h1>Mision</h1>\r\n      <h1>vision</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quienessomos;\r\n","import React from 'react';\r\nimport '../App.css';\r\n\r\nfunction Login() {\r\n    return (\r\n       <div>Aqui va el login</div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport '../App.css';\r\n\r\nfunction Eventos() {\r\n    return (\r\n       <div>Calendario de eventos</div>\r\n    );\r\n}\r\n\r\nexport default Eventos;\r\n","import React from 'react';\nimport './App.css';\nimport Nav from \"./Componentes/Nav\";\nimport Inicio from \"./Componentes/Inicio\";\nimport Noticias from \"./Componentes/Noticias\";\nimport qsomos from \"./Componentes/Quienessomos\";\nimport Login from \"./Componentes/Login\";\nimport Events from \"./Componentes/Eventos\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport imagen from './Img/full.jpg';\n\n\n\nfunction App() {\n  return (\n\n    <Router>\n      <div className=\"App\">\n\n        <Nav />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/Inicio\" component={Inicio} />\n          <Route path=\"/Noticias\" component={Noticias} />\n          <Route path=\"/Eventos\" component={Events} />\n          <Route path=\"/QuienesSomos\" component={qsomos} />\n          <Route path=\"/Login\" component={Login} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nconst Home = () => (\n  <div>\n    <img src={imagen} class=\"rounded\" alt=\"Cinque Terre\"></img>\n  </div>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}